{
	"openapi": "3.0.4",
	"info": {
		"title": "Swagger Petstore - OpenAPI 3.0",
		"description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
		"termsOfService": "https://swagger.io/terms/",
		"contact": { "email": "apiteam@swagger.io" },
		"license": {
			"name": "Apache 2.0",
			"url": "https://www.apache.org/licenses/LICENSE-2.0.html"
		},
		"version": "1.0.26"
	},
	"externalDocs": {
		"description": "Find out more about Swagger",
		"url": "https://swagger.io"
	},
	"servers": [{ "url": "/api/v3" }],
	"tags": [
		{
			"name": "pet",
			"description": "Everything about your Pets",
			"externalDocs": {
				"description": "Find out more",
				"url": "https://swagger.io"
			}
		},
		{
			"name": "store",
			"description": "Access to Petstore orders",
			"externalDocs": {
				"description": "Find out more about our store",
				"url": "https://swagger.io"
			}
		},
		{ "name": "user", "description": "Operations about user" }
	],
	"paths": {
		"/pet/{petId}": {
			"post": {
				"tags": ["pet"],
				"summary": "Updates a pet in the store with form data.",
				"description": "Updates a pet resource based on the form data.",
				"operationId": "updatePetWithForm",
				"parameters": [
					{
						"name": "petId",
						"in": "path",
						"description": "ID of pet that needs to be updated",
						"required": true,
						"schema": { "type": "integer", "format": "int64" }
					},
					{
						"name": "name",
						"in": "query",
						"description": "Name of pet that needs to be updated",
						"schema": { "type": "string" }
					},
					{
						"name": "isAlive",
						"in": "header",
						"description": "Status of pet that needs to be updated",
						"schema": { "type": "boolean" }
					},
					{
						"name": "height",
						"in": "header",
						"description": "Height of the pet that needs to be updated",
						"schema": { "type": "number" }
					},
					{
						"name": "owners",
						"in": "cookie",
						"description": "List of owners of the pet that needs to be updated",
						"schema": { "type": "array", "items": { "type": "integer" } }
					},
					{
						"name": "infos",
						"in": "cookie",
						"description": "General informations about the pet that needs to be updated",
						"schema": {
							"type": "object",
							"properties": { "name": { "type": "string" } }
						}
					},
					{
						"name": "age",
						"in": "query",
						"description": "Age of the pet that needs to be updated",
						"schema": { "type": "integer" }
					},
					{
						"name": "status",
						"in": "query",
						"description": "Status of the pet that needs to be updated",
						"schema": {
							"type": "string",
							"enum": ["available", "pending", "sold"]
						}
					},
					{
						"name": "width",
						"in": "header",
						"description": "Width of the pet that needs to be updated",
						"schema": {
							"type": "number",
							"minimum": 0,
							"maximum": 100
						}
					},
					{
						"name": "age",
						"in": "cookie",
						"description": "Age of the pet that needs to be updated",
						"schema": {
							"type": "integer",
							"minimum": 10,
							"maximum": 40
						}
					},
					{
						"name": "profilePicture",
						"in": "header",
						"description": "Profile picture of the pet that needs to be updated",
						"schema": { "type": "string", "minLength": 3, "maxLength": 300 }
					},
					{
						"name": "weight",
						"in": "cookie",
						"description": "Weight of the pets that needs to be updated",
						"schema": { "type": "number", "default": 60.0 }
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {},
							"application/xml": {}
						}
					},
					"400": { "description": "Invalid input" },
					"default": { "description": "Unexpected error" }
				},
				"security": [{ "petstore_auth": ["write:pets", "read:pets"] }]
			}
		},
		"/pets/location": {
			"get": {
				"tags": ["pet"],
				"summary": "Finds Pets by location",
				"description": "Multiple status values can be provided with comma separated strings",
				"parameters": [
					{
						"name": "location",
						"in": "query",
						"description": "Location of the pet that needs to be updated",
						"required": true,
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {},
							"application/xml": {}
						}
					},
					"default": { "description": "Unexpected error" }
				}
			}
		}
	}
}
